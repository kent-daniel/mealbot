name: Terraform CI/CD

on:
  workflow_call:
    inputs:
      image_uri:
        required: true
        type: string
      project_id:
        required: true
        type: string
      cloud_run_sa_email:
        required: true
        type: string
      tf_bucket:
        required: true
        type: string
      github_ref:
        required: true
        type: string
      github_event_name:
        required: true
        type: string
      wif_provider: # Added for Google Cloud Auth
        required: true
        type: string
      actions_sa_email: # Added for Google Cloud Auth
        required: true
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        id: "auth"
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ inputs.wif_provider }}
          service_account: ${{ vars.actions_sa_email }}
          token_format: "access_token"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.tf_api_token }}

      - name: Terraform Init
        run: cd terraform && terraform init -backend-config bucket=${{ inputs.tf_bucket }}

      - name: Terraform Format
        run: cd terraform && terraform fmt -check

      - name: Terraform Plan
        run: |
          cd terraform && terraform plan \
            -var cloud_run_image_uri="${{ inputs.image_uri }}" \
            -var project_id=${{ inputs.project_id }} \
            -var cloud_run_service_account=${{ inputs.cloud_run_sa_email }} \
            -var tf_state_bucket=${{ inputs.tf_bucket }} \
            -out "prod.tfplan"

      - name: Terraform Apply
        if: inputs.github_ref == 'refs/heads/main' && inputs.github_event_name == 'push'
        run: cd terraform && terraform apply "prod.tfplan"
